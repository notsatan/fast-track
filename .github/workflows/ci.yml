name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run Black
      uses: jpetrucciani/black-check@master
      with:
        args: ". --check"

    - name: Set up cache
      uses: actions/cache@v2.1.3
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install poetry
      run: make download-poetry

    - name: Install dependencies
      run: |
        source "$HOME/.poetry/env"
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run safety checks
      run: |
        source "$HOME/.poetry/env"
        STRICT=1 make check-safety

    - name: Run style checks
      run: |
        source "$HOME/.poetry/env"
        STRICT=1 make check-style

    - name: Run tests
      run: |
        source "$HOME/.poetry/env"
        make test

    - name: Generate coverage report
      run: |
        source "$HOME/.poetry/env"
        make gen-report

    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        files: ./coverage1.xml,./coverage2.xml
        directory: ./coverage/reports/
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.gz
        verbose: true
